{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ahextech\\\\dinesh\\\\work\\\\native\\\\instagram\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../redux/actions\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FeedScreen from \"./main/Feed\";\nimport AddScreen from \"./main/Add\";\nimport ProfileScreen from \"./main/Profile\";\nvar Tab = createBottomTabNavigator();\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              size: 26,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 17\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              size: 26,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              size: 26,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.userState.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["C:/Users/Ahextech/dinesh/work/native/instagram/components/Main.js"],"names":["React","Component","connect","bindActionCreators","fetchUser","createBottomTabNavigator","MaterialCommunityIcons","FeedScreen","AddScreen","ProfileScreen","Tab","Main","props","tabBarIcon","color","size","mapStateToProps","state","currentUser","userState","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,SAAT;AACA,SAAQC,wBAAR,QAAuC,+BAAvC;AACA,OAAOC,sBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;AACA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;;IACMM,I;;;;;;;;;;;;;WACJ,6BAAoB;AAClB,WAAKC,KAAL,CAAWR,SAAX;AACD;;;WACD,kBAAS;AAAA;;AACP,aACE,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEG,UAAnC;AAA+C,QAAA,OAAO,EAAE;AACpDM,UAAAA,UAAU,EAAE;AAAA,gBAAEC,KAAF,QAAEA,KAAF;AAAA,gBAASC,IAAT,QAASA,IAAT;AAAA,mBACR,oBAAC,sBAAD;AAAwB,cAAA,IAAI,EAAC,MAA7B;AAAoC,cAAA,IAAI,EAAE,EAA1C;AAA8C,cAAA,KAAK,EAAED,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ;AAAA;AADwC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAMM,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,KAAjB;AAAuB,QAAA,SAAS,EAAEN,SAAlC;AAA6C,QAAA,OAAO,EAAE;AACtDK,UAAAA,UAAU,EAAE;AAAA,gBAAEC,KAAF,SAAEA,KAAF;AAAA,gBAASC,IAAT,SAASA,IAAT;AAAA,mBACR,oBAAC,sBAAD;AAAwB,cAAA,IAAI,EAAC,UAA7B;AAAwC,cAAA,IAAI,EAAE,EAA9C;AAAkD,cAAA,KAAK,EAAED,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ;AAAA;AAD0C,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANN,EAWM,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,SAAjB;AAA2B,QAAA,SAAS,EAAEL,aAAtC;AAAqD,QAAA,OAAO,EAAE;AAC9DI,UAAAA,UAAU,EAAE;AAAA,gBAAEC,KAAF,SAAEA,KAAF;AAAA,gBAASC,IAAT,SAASA,IAAT;AAAA,mBACR,oBAAC,sBAAD;AAAwB,cAAA,IAAI,EAAC,gBAA7B;AAA8C,cAAA,IAAI,EAAE,EAApD;AAAwD,cAAA,KAAK,EAAED,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ;AAAA;AADkD,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXN,CADF;AAmBD;;;;EAxBgBb,S;;AA2BnB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,SAAN,CAAgBD;AADxB,GAAP;AAGD,CAJD;;AAMA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SACzBlB,kBAAkB,CAAC;AAAEC,IAAAA,SAAS,EAATA;AAAF,GAAD,EAAgBiB,QAAhB,CADO;AAAA,CAA3B;;AAGA,eAAenB,OAAO,CAACc,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchUser } from \"../redux/actions\";\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\nimport FeedScreen from \"./main/Feed\";\r\nimport AddScreen from \"./main/Add\"\r\nimport ProfileScreen from './main/Profile'\r\nconst Tab = createBottomTabNavigator()\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Feed\" component={FeedScreen} options={{\r\n            tabBarIcon: ({color, size}) => (\r\n                <MaterialCommunityIcons name=\"home\" size={26} color={color}/>\r\n            )\r\n        }} />\r\n            <Tab.Screen name=\"Add\" component={AddScreen} options={{\r\n            tabBarIcon: ({color, size}) => (\r\n                <MaterialCommunityIcons name=\"plus-box\" size={26} color={color}/>\r\n            )\r\n        }} />\r\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} options={{\r\n            tabBarIcon: ({color, size}) => (\r\n                <MaterialCommunityIcons name=\"account-circle\" size={26} color={color}/>\r\n            )\r\n        }} />\r\n      </Tab.Navigator>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.userState.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ fetchUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}